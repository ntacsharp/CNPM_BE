// <auto-generated />
using System;
using CNPM_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CNPM_BE.Migrations
{
    [DbContext(typeof(CNPMDbContext))]
    [Migration("20231123144747_DatabaseMigration")]
    partial class DatabaseMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CNPM_BE.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_salt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_app_user");

                    b.ToTable("app_user", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_time");

                    b.Property<int>("DonatorId")
                        .HasColumnType("integer")
                        .HasColumnName("donator_id");

                    b.Property<int>("FundId")
                        .HasColumnType("integer")
                        .HasColumnName("fund_id");

                    b.HasKey("Id")
                        .HasName("pk_donation");

                    b.HasIndex("DonatorId")
                        .HasDatabaseName("ix_donation_donator_id");

                    b.HasIndex("FundId")
                        .HasDatabaseName("ix_donation_fund_id");

                    b.ToTable("donation", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.DonationFund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiration_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ReceivedAmount")
                        .HasColumnType("integer")
                        .HasColumnName("received_amount");

                    b.Property<int?>("SmallestAmount")
                        .HasColumnType("integer")
                        .HasColumnName("smallest_amount");

                    b.HasKey("Id")
                        .HasName("pk_donation_fund");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_donation_fund_creator_id");

                    b.ToTable("donation_fund", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.Household", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision")
                        .HasColumnName("area");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeactivateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deactivate_time");

                    b.Property<string>("HouseholdCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("household_code");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<int>("ManagerId")
                        .HasColumnType("integer")
                        .HasColumnName("manager_id");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("owner_name");

                    b.Property<int>("ServiceFeePerMember")
                        .HasColumnType("integer")
                        .HasColumnName("service_fee_per_member");

                    b.Property<int>("VehicleCount")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_count");

                    b.HasKey("Id")
                        .HasName("pk_household");

                    b.HasIndex("ManagerId")
                        .HasDatabaseName("ix_household_manager_id");

                    b.ToTable("household", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.HouseholdDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("DonatorId")
                        .HasColumnType("integer")
                        .HasColumnName("donator_id");

                    b.Property<int>("FundId")
                        .HasColumnType("integer")
                        .HasColumnName("fund_id");

                    b.HasKey("Id")
                        .HasName("pk_household_donation");

                    b.HasIndex("DonatorId")
                        .HasDatabaseName("ix_household_donation_donator_id");

                    b.HasIndex("FundId")
                        .HasDatabaseName("ix_household_donation_fund_id");

                    b.ToTable("household_donation", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.HouseholdFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HouseholdId")
                        .HasColumnType("integer")
                        .HasColumnName("household_id");

                    b.Property<int>("ManagementFee")
                        .HasColumnType("integer")
                        .HasColumnName("management_fee");

                    b.Property<int>("Month")
                        .HasColumnType("integer")
                        .HasColumnName("month");

                    b.Property<int>("ParkingFee")
                        .HasColumnType("integer")
                        .HasColumnName("parking_fee");

                    b.Property<int>("ReceivedManagementFee")
                        .HasColumnType("integer")
                        .HasColumnName("received_management_fee");

                    b.Property<int>("ReceivedParkingFee")
                        .HasColumnType("integer")
                        .HasColumnName("received_parking_fee");

                    b.Property<int>("ReceivedServiceFee")
                        .HasColumnType("integer")
                        .HasColumnName("received_service_fee");

                    b.Property<int>("ServiceFee")
                        .HasColumnType("integer")
                        .HasColumnName("service_fee");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_household_fee");

                    b.HasIndex("HouseholdId")
                        .HasDatabaseName("ix_household_fee_household_id");

                    b.ToTable("household_fee", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.HouseholdMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HouseholdId")
                        .HasColumnType("integer")
                        .HasColumnName("household_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_household_member");

                    b.HasIndex("HouseholdId")
                        .HasDatabaseName("ix_household_member_household_id");

                    b.ToTable("household_member", (string)null);
                });

            modelBuilder.Entity("CNPM_BE.Models.Donation", b =>
                {
                    b.HasOne("CNPM_BE.Models.Household", null)
                        .WithMany()
                        .HasForeignKey("DonatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_donation_household_household_id");

                    b.HasOne("CNPM_BE.Models.DonationFund", null)
                        .WithMany()
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_donation_donation_fund_donation_fund_id");
                });

            modelBuilder.Entity("CNPM_BE.Models.DonationFund", b =>
                {
                    b.HasOne("CNPM_BE.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_donation_fund_app_user_app_user_id");
                });

            modelBuilder.Entity("CNPM_BE.Models.Household", b =>
                {
                    b.HasOne("CNPM_BE.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_household_app_user_app_user_id");
                });

            modelBuilder.Entity("CNPM_BE.Models.HouseholdDonation", b =>
                {
                    b.HasOne("CNPM_BE.Models.Household", null)
                        .WithMany()
                        .HasForeignKey("DonatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_household_donation_household_household_id");

                    b.HasOne("CNPM_BE.Models.DonationFund", null)
                        .WithMany()
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_household_donation_donation_fund_donation_fund_id");
                });

            modelBuilder.Entity("CNPM_BE.Models.HouseholdFee", b =>
                {
                    b.HasOne("CNPM_BE.Models.Household", null)
                        .WithMany()
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_household_fee_household_household_id");
                });

            modelBuilder.Entity("CNPM_BE.Models.HouseholdMember", b =>
                {
                    b.HasOne("CNPM_BE.Models.Household", null)
                        .WithMany()
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_household_member_household_household_id");
                });
#pragma warning restore 612, 618
        }
    }
}
